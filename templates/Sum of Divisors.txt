bool flag[NN];
int primes[NN],total;

void sieve()
{
    for(int i=4; i<NN; i+=2) flag[i]=1;

    for(int i=3; i*i<NN; i+=2)
    {
        if(flag[i]==0)
        {
            for(int j=i*i; j<NN; j+=2*i) flag[j]=1;
        }
    }

    total=0;

	for(int i=2; i<NN; i++)
		if(!flag[i]) primes[total++]=i;
}


int Sum_Of_Divisor(int n)
{
    int i,sum=1,p;

    for(i=0; i<total && n!=1 && primes[i]*primes[i]<=n; i++)
    {
        if(n%primes[i]==0)
        {
            p=1;
            while(n%primes[i]==0)
            {
                n/=primes[i];
                p=p*primes[i];
            }
            p=p*primes[i];
            sum*=(p-1)/(primes[i]-1);
        }
    }

    if(n>1)
    {
        p=n*n;
        sum*=(p-1)/(n-1);
    }
    return sum;
}
