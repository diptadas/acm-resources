string add(string a,string b)
{
    string ans;
    int tmp,carry=0;
    for(int i=a.size()-1,j=b.size()-1; i>=0||j>=0; i--,j--)
    {
        if(i<0) tmp=carry+b[j]-'0';
        else if(j<0) tmp=carry+a[i]-'0';
        else tmp=carry+(a[i]-'0')+(b[j]-'0');

        carry=tmp/10;
        ans+=(tmp%10)+'0';
    }
    if(carry) ans+='1';
    reverse(ans.begin(),ans.end());
    return ans;
}

int compare(string a,string b)
{
    if(a.size()>b.size()) return 1;
    if(a.size()<b.size()) return -1;
    for(int i=0; i<=a.size()-1; i++)
    {
        if(a[i]>b[i]) return 1;
        if(a[i]<b[i]) return -1;
    }
    return 0;
}

string remove_leading_zeros(string str)
{
    int zero=0;
    for(int i=0; i<str.size(); i++)
    {
        if(str[i]=='0') zero++;
        else break;
    }
    if(zero==str.size()) return "0";
    return str.substr(zero);
}

string subtract(string a,string b)
{
    int cmp=compare(a,b);
    if(cmp==0) return "0";
    if(cmp==-1) swap(a,b);

    string ans;
    int tmp,borrow=0;

    for(int i=a.size()-1,j=b.size()-1; i>=0||j>=0; i--,j--)
    {
        if(j<0) tmp=a[i]-'0'-borrow;
        else tmp=a[i]-b[j]-borrow;

        if(tmp<0)
        {
            tmp+=10;
            borrow=1;
        }
        else borrow=0;

        ans+=tmp+'0';
    }

    reverse(ans.begin(),ans.end());
    ans=remove_leading_zeros(ans);
    if(cmp==-1) ans="-"+ans;

    return ans;
}

string multiply(string a,string b)
{
    string ans,str;
    int tmp,carry;

    for(int i=a.size()-1; i>=0; i--)
    {
        str="";
        for(int k=0; k<a.size()-i-1; k++) str+='0';

        carry=0;

        for(int j=b.size()-1; j>=0; j--)
        {
            tmp=carry+(a[i]-'0')*(b[j]-'0');
            carry=tmp/10;
            tmp=tmp%10;
            str+=tmp+'0';
        }

        if(carry) str+=carry+'0';
        reverse(str.begin(),str.end());

        if(i==a.size()-1) ans=str;
        else ans=add(ans,str);
    }
    return ans;
}